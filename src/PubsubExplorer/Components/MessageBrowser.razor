@typeparam T where T : IBrowsablePubsub, new()

<MudSplitter OnDoubleClicked="RestoreSplitDimensions"
             Height="100vh"
             @bind-Dimension="_splitDimensions">

    <StartContent>
        <MudList Class="mr-4" Style="overflow-y: auto; width: 100%; height: 100%"
                 Dense="true"
                 SelectionMode="SelectionMode.SingleSelection"
                 @bind-SelectedValue="Model.SelectedMessage">

            @foreach (var message in Model.FilteredMessagePage)
            {
                <MudListItem Value="@(message)">
                    <div class="d-flex flex-row">
                        @if (message.Bookmarked)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.Check" Size="Size.Small" Class="mr-2" />
                        }
                        <pre>@message.ItemText</pre>
                    </div>
                </MudListItem>
            }
        </MudList>
    </StartContent>

    <EndContent>
        <MudStack Class="ml-4" Style="width: 100%">
            <div style="@BeforeTabsStyle">
                @if (BeforeTabs != null && Model is not null)
                {
                    @BeforeTabs(Model)
                }
            </div>

            <TabbedMessageDetails Message="Model?.SelectedMessage" />
        </MudStack>
    </EndContent>
</MudSplitter>

@code {
    [Parameter, EditorRequired]
    public T Model { get; set; } = new();

    [Parameter]
    public RenderFragment<T>? BeforeTabs { get; set; }

    [Parameter]
    public string? BeforeTabsStyle { get; set; }

    private double _splitDimensions = 33.3;

    private Task RestoreSplitDimensions()
    {
        _splitDimensions = 33.3;
        return Task.CompletedTask;
    }
}
